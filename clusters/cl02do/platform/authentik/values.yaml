authentik:
  global:
    env:
      - name: AUTHENTIK_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: authentik-key-secret
            key: key
      - name: AUTHENTIK_POSTGRESQL__HOST
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: host
      - name: AUTHENTIK_POSTGRESQL__NAME
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: database
      - name: AUTHENTIK_POSTGRESQL__USER
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: user
      - name: AUTHENTIK_POSTGRESQL__PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: password
      - name: AUTHENTIK_POSTGRESQL__PORT
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: port
      - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: pgbouncer
      - name: AUTHENTIK_POSTGRESQL__SSLMODE
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: sslmode
      - name: AUTHENTIK_POSTGRESQL__SSLROOTCERT
        valueFrom:
          secretKeyRef:
            name: postgresql-cl02do-authentik-secret
            key: sslrootcert
  server:
    name: server
    replicas: 1
    resources:
      limits:
        cpu: 1500m
        memory: 1Gi
      requests:
        cpu: 50m
        memory: 512Mi
    volumes:
      - name: custom-css
        configMap:
          name: authentik-custom-css
    volumeMounts:
      - name: custom-css
        mountPath: /web/dist/custom.css
        subPath: custom.css
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-issuer
      hosts:
        - auth.alexlebens.dev
      tls:
        - secretName: authentik-secret-tls
          hosts:
            - auth.alexlebens.dev
  worker:
    name: worker
    replicas: 1
    resources:
      limits:
        cpu: 1500m
        memory: 512MI
      requests:
        cpu: 50m
        memory: 256Mi
  prometheus:
    rules:
      enabled: true
  postgresql:
    enabled: false
  redis:
    enabled: true
